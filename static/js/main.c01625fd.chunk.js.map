{"version":3,"sources":["Components/AddTodo/AddTodo.js","Components/Todo/Todo.js","Components/TodoList/TodoList.js","Components/Filters/Filters.js","App.js","index.js"],"names":["AddTodo","state","title","handleInputChange","value","target","setState","handleSubmit","event","preventDefault","addTodo","props","length","completed","id","uuidv4","this","className","onSubmit","placeholder","onChange","onKeyUp","handleSubmitEnter","React","Component","Todo","todo","deleteTodo","markAsCompleted","cn","type","checked","htmlFor","onClick","TodoList","markAllAsCompleted","todos","map","key","Filters","filter","handleFilter","clearCompleted","itemsLeft","selected","App","prevState","setFilter","savedTodos","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c01625fd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport class AddTodo extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleInputChange = ({ target }) => {\n    const { value } = target;\n\n    this.setState({\n      title: value,\n    });\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { title } = this.state;\n    const { addTodo } = this.props;\n\n    if (title.length > 0) {\n      addTodo({\n        title,\n        completed: false,\n        id: uuidv4(),\n      });\n    }\n\n    this.setState({\n      title: '',\n    });\n  }\n\n  render() {\n    const { title } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={this.handleSubmit}>\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleInputChange}\n            onKeyUp={this.handleSubmitEnter}\n            value={title}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const Todo = ({ todo, deleteTodo, markAsCompleted }) => {\n  const { title, completed, id } = todo;\n\n  return (\n    <li className={cn({ completed })}>\n      <div className=\"view\">\n        <input\n          id={id}\n          type=\"checkbox\"\n          className=\"toggle\"\n          checked={completed}\n          onChange={event => markAsCompleted(event.target.checked)}\n        />\n        <label htmlFor={id}>{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(id)}\n        />\n      </div>\n      <input type=\"text\" className=\"edit\" />\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n  }).isRequired,\n  markAsCompleted: PropTypes.func.isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = (\n  { deleteTodo,\n    markAsCompleted,\n    markAllAsCompleted,\n    todos },\n) => (\n  <section className=\"main\">\n    <input\n      type=\"checkbox\"\n      id=\"toggle-all\"\n      className=\"toggle-all\"\n      onClick={markAllAsCompleted}\n    />\n    <label htmlFor=\"toggle-all\">Mark all as complete</label>\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          todo={todo}\n          key={todo.id}\n          markAsCompleted={checked => markAsCompleted(todo.id, checked)}\n          deleteTodo={deleteTodo}\n        />\n      ))\n      }\n    </ul>\n  </section>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  deleteTodo: PropTypes.func.isRequired,\n  markAsCompleted: PropTypes.func.isRequired,\n  markAllAsCompleted: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nexport const Filters = ({ todos, filter, handleFilter, clearCompleted }) => {\n  const itemsLeft = todos.filter(todo => !todo.completed).length;\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        {`${itemsLeft} items left`}\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <button\n            className={cn({ selected: filter === 'all' })}\n            type=\"button\"\n            onClick={() => handleFilter('all')}\n          >\n            All\n          </button>\n        </li>\n\n        <li>\n          <button\n            className={cn({ selected: filter === 'active' })}\n            type=\"button\"\n            onClick={() => handleFilter('active')}\n          >\n            Active\n          </button>\n        </li>\n\n        <li>\n          <button\n            className={cn({ selected: filter === 'completed' })}\n            type=\"button\"\n            onClick={() => handleFilter('completed')}\n          >\n            Completed\n          </button>\n        </li>\n      </ul>\n\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        onClick={clearCompleted}\n      >\n      Clear completed\n      </button>\n    </footer>\n  );\n};\n\nFilters.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      id: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  clearCompleted: PropTypes.func.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { AddTodo } from './Components/AddTodo/AddTodo';\nimport { TodoList } from './Components/TodoList/TodoList';\nimport { Filters } from './Components/Filters/Filters';\n\nexport class App extends Component {\n  state = {\n    todos: [],\n    filter: 'all',\n  };\n\n  componentDidMount() {\n    const savedTodos = localStorage.getItem('todos');\n    const todos = savedTodos ? JSON.parse(savedTodos) : this.state.todos;\n\n    if (savedTodos) {\n      this.setState({\n        todos,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.todos !== this.state.todos) {\n      localStorage.setItem('todos', JSON.stringify(this.state.todos));\n    }\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n  }\n\n  deleteTodo = (id) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => (\n        todo.id !== id\n      )),\n    }));\n  }\n\n  markAsCompleted = (id, checked) => {\n    this.setState(prevState => ({\n      todos: prevState.todos.map(todo => (\n        (todo.id === id)\n          ? {\n            ...todo,\n            completed: checked,\n          }\n          : todo\n      )),\n    }));\n  }\n\n  markAllAsCompleted = (event) => {\n    if (event.target.checked) {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => (\n          {\n            ...todo,\n            completed: true,\n          }\n        )),\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todos.map(todo => (\n          {\n            ...todo,\n            completed: false,\n          }\n        )),\n      }));\n    }\n  }\n\n  handleFilter = (filter) => {\n    this.setState({\n      filter,\n    });\n  }\n\n  setFilter = () => {\n    const { todos, filter } = this.state;\n\n    switch (filter) {\n      case 'active':\n        return todos.filter(todo => !todo.completed);\n      case 'completed':\n        return todos.filter(todo => todo.completed);\n      default:\n        return todos;\n    }\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n  }\n\n  render() {\n    const { todos, filter } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <AddTodo addTodo={this.addTodo} />\n        <TodoList\n          deleteTodo={this.deleteTodo}\n          markAsCompleted={this.markAsCompleted}\n          markAllAsCompleted={this.markAllAsCompleted}\n          todos={this.setFilter()}\n        />\n        <Filters\n          todos={todos}\n          filter={filter}\n          handleFilter={this.handleFilter}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}